
services:
  data-ingestion:
    build:
      context: .
    container_name: data-ingestion
    command: python main.py
    restart: unless-stopped
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - db
    volumes:
      - .:/app
    env_file: .env

  db:
    image: postgres:15-alpine
    container_name: trading-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./storage/sql/schema.sql:/docker-entrypoint-initdb.d/schema.sql

  client-menu:
    build:
      context: .
    container_name: client-menu
    command: python client/client_menu.py
    depends_on:
      - db
    volumes:
      - .:/app
    stdin_open: true
    tty: true
    environment:
      - DATABASE_URL=${DATABASE_URL}
    env_file: .env

  rest-sync:
    build:
      context: .
    container_name: rest-sync
    command: python services/rest_sync.py
    depends_on:
      - db
    volumes:
      - .:/app
    restart: unless-stopped
    env_file: .env

  generated-sync:
    build:
      context: .
    container_name: generated-sync
    command: python services/gen_candle_sync.py
    depends_on:
      - db
    volumes:
      - .:/app
    restart: unless-stopped
    env_file: .env

volumes:
  pgdata:
